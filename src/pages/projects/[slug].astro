---
import BaseLayout from '../../layouts/BaseLayout.astro';
import PageHeader from '../../components/PageHeader.astro';
import Icon from '../../components/Icon.astro';
import Tag from '../../components/Tag.astro';
import Button from '../../components/Button.astro';
import Badge from '../../components/Badge.astro';
import TechTag from '../../components/TechTag.astro';
import ProjectMeta from '../../components/ProjectMeta.astro';
import careerData from '../../data/careerData.json';

export function getStaticPaths() {
  return careerData.projects.map((project) => ({
    params: { slug: project.slug },
    props: { project }
  }));
}

const { project } = Astro.props;

// Get project type info
const getProjectType = (type: string) => {
  const types = {
    engineering: { icon: '💻', label: 'Engineering', color: 'blue' },
    writing: { icon: '📝', label: 'Writing', color: 'green' },
    leadership: { icon: '👥', label: 'Leadership', color: 'purple' }
  };
  return types[type] || types.engineering;
};

const typeInfo = getProjectType(project.type);

// Format date for display
const formatDate = (date: string) => {
  if (date.includes('-')) {
    const [start, end] = date.split('-');
    return `${start} - ${end}`;
  }
  return date;
};
---

<BaseLayout title={`${project.displayName} | Clinton Langosch`}>
  <div class="container mx-auto px-4 max-w-6xl">
    <!-- Hero Section -->
    <div class="pt-8 pb-12 border-b border-dark-border">
      <div class="mb-6">
        <Button
          href="/projects"
          variant="link"
          icon="chevron-left"
          iconPosition="left"
        >
          Back to Projects
        </Button>
      </div>
      
      <h1 class="text-4xl font-bold text-text-primary mb-4">
        {project.displayName}
      </h1>
      
      <div class="flex flex-wrap items-center gap-4 mb-6">
        <Badge variant="secondary" size="md" icon={typeInfo.icon}>
          {typeInfo.label}
        </Badge>
        
        <Badge variant="primary" size="md">
          {project.category}
        </Badge>
        
        <span class="text-text-secondary">
          {formatDate(project.date)}
        </span>
        
        {project.featured && (
          <Badge variant="featured" size="md" icon="⭐">
            Featured Project
          </Badge>
        )}
      </div>
      
      <p class="text-xl text-text-secondary leading-relaxed">
        {project.summary}
      </p>
    </div>

    <!-- Main Content -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 py-12">
      <!-- Left Column - Details -->
      <div class="lg:col-span-2 space-y-8">
        <!-- Role -->
        <section>
          <h2 class="text-2xl font-semibold text-text-primary mb-4">My Role</h2>
          <p class="text-lg text-text-secondary">
            {project.role}
          </p>
        </section>

        <!-- Description -->
        {project.description && (
          <section>
            <h2 class="text-2xl font-semibold text-text-primary mb-4">Overview</h2>
            <p class="text-text-secondary leading-relaxed">
              {project.description}
            </p>
          </section>
        )}

        <!-- Challenge -->
        {project.challenge && (
          <section>
            <h2 class="text-2xl font-semibold text-text-primary mb-4">The Challenge</h2>
            <p class="text-text-secondary leading-relaxed">
              {project.challenge}
            </p>
          </section>
        )}

        <!-- Technologies Used -->
        {project.technologies.length > 0 && (
          <section>
            <h2 class="text-2xl font-semibold text-text-primary mb-4">Technologies</h2>
            <div class="flex flex-wrap gap-2">
              {project.technologies.map((tech: string) => (
                <TechTag name={tech} variant="default" size="md" showIcon={true} />
              ))}
            </div>
          </section>
        )}

        <!-- Tools -->
        {project.tools.length > 0 && (
          <section>
            <h2 class="text-2xl font-semibold text-text-primary mb-4">Tools & Platforms</h2>
            <div class="flex flex-wrap gap-2">
              {project.tools.map((tool: string) => (
                <TechTag name={tool} variant="default" size="md" showIcon={true} />
              ))}
            </div>
          </section>
        )}
      </div>

      <!-- Right Column - Sidebar -->
      <div class="space-y-6">
        <!-- Links Card -->
        {(project.links.github || project.links.website || project.links.demo || project.links.article) && (
          <div class="bg-dark-bg-secondary rounded-xl p-6 border border-dark-border-subtle">
            <h3 class="text-lg font-semibold text-text-primary mb-4">Project Links</h3>
            <div class="space-y-3">
              {project.links.website && (
                <Button
                  href={project.links.website}
                  variant="link"
                  icon="globe"
                  external={true}
                  className="flex items-center gap-3 text-text-secondary hover:text-accent transition-colors"
                >
                  View Website
                </Button>
              )}
              
              {project.links.github && (
                <Button
                  href={project.links.github}
                  variant="link"
                  icon="github"
                  external={true}
                  className="flex items-center gap-3 text-text-secondary hover:text-accent transition-colors"
                >
                  View on GitHub
                </Button>
              )}
              
              {project.links.demo && project.type != 'writing' && (
                <Button
                  href={project.links.demo}
                  variant="link"
                  icon="eye"
                  external={true}
                  className="flex items-center gap-3 text-text-secondary hover:text-accent transition-colors"
                >
                  View Demo
                </Button>
              )}

              {project.links.demo && project.type == 'writing' && (
                <p class="text-text-secondary">
                  Sample available upon request
                </p>
              )}
              
              {project.links.article && (
                <Button
                  href={project.links.article}
                  variant="link"
                  icon="file-text"
                  external={true}
                  className="flex items-center gap-3 text-text-secondary hover:text-accent transition-colors"
                >
                  Read Article
                </Button>
              )}
            </div>
          </div>
        )}

        <!-- Tags -->
        {project.tags.length > 0 && (
          <div class="bg-dark-bg-secondary rounded-xl p-6 border border-dark-border-subtle">
            <h3 class="text-lg font-semibold text-text-primary mb-4">Tags</h3>
            <div class="flex flex-wrap gap-2">
              {project.tags.map(tag => (
                <Tag text={tag} />
              ))}
            </div>
          </div>
        )}

        <!-- Focus Areas -->
        {project.focus.length > 0 && (
          <div class="bg-dark-bg-secondary rounded-xl p-6 border border-dark-border-subtle">
            <h3 class="text-lg font-semibold text-text-primary mb-4">Focus Area</h3>
            <div class="flex flex-wrap gap-2">
              {project.focus.map((area: string) => (
                <Badge variant="secondary" className="capitalize">
                  {area}
                </Badge>
              ))}
            </div>
          </div>
        )}
      </div>
    </div>
  </div>
</BaseLayout>
