---
import BaseLayout from '../../layouts/BaseLayout.astro';
import PageHeader from '../../components/PageHeader.astro';
import Icon from '../../components/Icon.astro';
import Tag from '../../components/Tag.astro';
import careerData from '../../data/careerData.json';

export function getStaticPaths() {
  return careerData.projects.map((project) => ({
    params: { slug: project.slug },
    props: { project }
  }));
}

const { project } = Astro.props;

// Get project type info
const getProjectType = (type: string) => {
  const types = {
    engineering: { icon: 'üíª', label: 'Engineering', color: 'blue' },
    writing: { icon: 'üìù', label: 'Writing', color: 'green' },
    leadership: { icon: 'üë•', label: 'Leadership', color: 'purple' }
  };
  return types[type] || types.engineering;
};

const typeInfo = getProjectType(project.type);

// Format date for display
const formatDate = (date: string) => {
  if (date.includes('-')) {
    const [start, end] = date.split('-');
    return `${start} - ${end}`;
  }
  return date;
};
---

<BaseLayout title={`${project.displayName} | Clinton Langosch`}>
  <div class="container mx-auto px-4 max-w-6xl">
    <!-- Hero Section -->
    <div class="pt-8 pb-12 border-b border-gray-200">
      <div class="mb-6">
        <a href="/projects" class="inline-flex items-center text-primary hover:text-blue-700 transition-colors">
          <svg class="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
          </svg>
          Back to Projects
        </a>
      </div>
      
      <h1 class="text-4xl font-bold text-primary-dark mb-4">
        {project.displayName}
      </h1>
      
      <div class="flex flex-wrap items-center gap-4 mb-6">
        <span class={`inline-flex items-center gap-1.5 px-3 py-1.5 rounded-lg font-medium
          ${typeInfo.color === 'blue' ? 'bg-blue-100 text-blue-800' : 
            typeInfo.color === 'green' ? 'bg-green-100 text-green-800' : 
            'bg-purple-100 text-purple-800'}`}>
          <span>{typeInfo.icon}</span>
          {typeInfo.label}
        </span>
        
        <span class="text-gray-600">
          <span class="font-medium">{project.category}</span>
        </span>
        
        <span class="text-gray-600">
          {formatDate(project.date)}
        </span>
        
        {project.featured && (
          <span class="bg-yellow-100 text-yellow-800 px-3 py-1.5 rounded-lg font-medium">
            ‚≠ê Featured Project
          </span>
        )}
      </div>
      
      <p class="text-xl text-gray-700 leading-relaxed">
        {project.summary}
      </p>
    </div>

    <!-- Main Content -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 py-12">
      <!-- Left Column - Details -->
      <div class="lg:col-span-2 space-y-8">
        <!-- Role -->
        <section>
          <h2 class="text-2xl font-semibold text-primary-dark mb-4">My Role</h2>
          <p class="text-lg text-gray-700">
            {project.role}
          </p>
        </section>

        <!-- Description -->
        {project.description && (
          <section>
            <h2 class="text-2xl font-semibold text-primary-dark mb-4">Overview</h2>
            <p class="text-gray-700 leading-relaxed">
              {project.description}
            </p>
          </section>
        )}

        <!-- Challenge -->
        {project.challenge && (
          <section>
            <h2 class="text-2xl font-semibold text-primary-dark mb-4">The Challenge</h2>
            <p class="text-gray-700 leading-relaxed">
              {project.challenge}
            </p>
          </section>
        )}

        <!-- Technologies Used -->
        {project.technologies.length > 0 && (
          <section>
            <h2 class="text-2xl font-semibold text-primary-dark mb-4">Technologies</h2>
            <div class="flex flex-wrap gap-2">
              {project.technologies.map(tech => (
                <div class="inline-flex items-center gap-2 bg-blue-50 text-blue-700 px-3 py-2 rounded-lg">
                  <Icon name={tech} className="w-5 h-5" />
                  <span class="font-medium">{tech}</span>
                </div>
              ))}
            </div>
          </section>
        )}

        <!-- Tools -->
        {project.tools.length > 0 && (
          <section>
            <h2 class="text-2xl font-semibold text-primary-dark mb-4">Tools & Platforms</h2>
            <div class="flex flex-wrap gap-2">
              {project.tools.map(tool => (
                <div class="inline-flex items-center gap-2 bg-green-50 text-green-700 px-3 py-2 rounded-lg">
                  <Icon name={tool} className="w-5 h-5" />
                  <span class="font-medium">{tool}</span>
                </div>
              ))}
            </div>
          </section>
        )}
      </div>

      <!-- Right Column - Sidebar -->
      <div class="space-y-6">
        <!-- Links Card -->
        {(project.links.github || project.links.website || project.links.demo || project.links.article) && (
          <div class="bg-gray-50 rounded-xl p-6">
            <h3 class="text-lg font-semibold text-primary-dark mb-4">Project Links</h3>
            <div class="space-y-3">
              {project.links.website && (
                <a 
                  href={project.links.website} 
                  target="_blank" 
                  rel="noopener"
                  class="flex items-center gap-3 text-gray-700 hover:text-primary transition-colors"
                >
                  <svg class="w-5 h-5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
                  </svg>
                  <span class="font-medium">View Website</span>
                </a>
              )}
              
              {project.links.github && (
                <a 
                  href={project.links.github} 
                  target="_blank" 
                  rel="noopener"
                  class="flex items-center gap-3 text-gray-700 hover:text-primary transition-colors"
                >
                  <svg class="w-5 h-5 flex-shrink-0" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                  </svg>
                  <span class="font-medium">View on GitHub</span>
                </a>
              )}
              
              {project.links.demo && (
                <a 
                  href={project.links.demo} 
                  target="_blank" 
                  rel="noopener"
                  class="flex items-center gap-3 text-gray-700 hover:text-primary transition-colors"
                >
                  <svg class="w-5 h-5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                  </svg>
                  <span class="font-medium">View Demo</span>
                </a>
              )}
              
              {project.links.article && (
                <a 
                  href={project.links.article} 
                  target="_blank" 
                  rel="noopener"
                  class="flex items-center gap-3 text-gray-700 hover:text-primary transition-colors"
                >
                  <svg class="w-5 h-5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                  </svg>
                  <span class="font-medium">Read Article</span>
                </a>
              )}
            </div>
          </div>
        )}

        <!-- Tags -->
        {project.tags.length > 0 && (
          <div class="bg-gray-50 rounded-xl p-6">
            <h3 class="text-lg font-semibold text-primary-dark mb-4">Tags</h3>
            <div class="flex flex-wrap gap-2">
              {project.tags.map(tag => (
                <Tag text={tag} />
              ))}
            </div>
          </div>
        )}

        <!-- Focus Areas -->
        {project.focus.length > 0 && (
          <div class="bg-gray-50 rounded-xl p-6">
            <h3 class="text-lg font-semibold text-primary-dark mb-4">Focus Area</h3>
            <div class="flex flex-wrap gap-2">
              {project.focus.map(area => (
                <span class="px-3 py-1.5 bg-white border border-gray-300 rounded-lg text-gray-700 font-medium capitalize">
                  {area}
                </span>
              ))}
            </div>
          </div>
        )}
      </div>
    </div>
  </div>
</BaseLayout>