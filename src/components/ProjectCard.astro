---
import Button from './Button.astro';
import Badge from './Badge.astro';
import TechTag from './TechTag.astro';
import ProjectMeta from './ProjectMeta.astro';

/**
 * ProjectCard Component
 * Displays a project with metadata and links
 */
export interface Props {
  project: {
    name: string;
    slug: string;
    displayName: string;
    type: string;
    category: string;
    summary: string;
    role: string;
    technologies: string[];
    tools: string[];
    date: string;
    links: {
      website?: string | null;
      github?: string | null;
      demo?: string | null;
      article?: string | null;
    };
    focus: string[];
    featured: boolean;
    tags: string[];
  };
  className?: string;
}

const { project, className = '' } = Astro.props;

// Project detail page URL
const detailUrl = `/projects/${project.slug}`;

// Get project type icon and label
const getProjectType = (type: string) => {
  const types = {
    engineering: { icon: 'üíª', label: 'Engineering' },
    writing: { icon: 'üìù', label: 'Writing' },
    leadership: { icon: 'üë•', label: 'Leadership' }
  };
  return types[type] || types.engineering;
};

const typeInfo = getProjectType(project.type);
---

<article 
  class={`project-card bg-dark-card border border-dark-border rounded-xl p-6 hover:shadow-xl hover:-translate-y-1 hover:bg-dark-hover transition-all duration-200 ${className}`}
  data-focus={project.focus?.join(' ')} 
  data-type={project.type}
>
  <!-- Header -->
  <div class="mb-4">
    <h3 class="text-xl font-semibold text-text-primary mb-2">
      <a 
        href={detailUrl}
        class="hover:text-accent-blue transition-colors"
      >
        {project.displayName}
      </a>
    </h3>
    
    <div class="flex flex-wrap items-center gap-2 mb-2">
      <Badge variant="secondary" icon={typeInfo.icon}>
        {typeInfo.label}
      </Badge>
      <Badge variant="primary">
        {project.category}
      </Badge>
      {project.featured && (
        <Badge variant="featured" icon="‚≠ê">
          Featured
        </Badge>
      )}
    </div>
    
    <ProjectMeta role={project.role} date={project.date} className="mb-2" />
  </div>

  <!-- Summary -->
  <p class="text-text-secondary mb-4 leading-relaxed">
    {project.summary}
  </p>

  <!-- Technologies & Tools -->
  <div class="mb-4 space-y-2">
    {project.technologies.length > 0 && (
      <div>
        <span class="text-xs font-semibold text-text-muted uppercase tracking-wider">Technologies</span>
        <div class="flex flex-wrap gap-1 mt-1">
          {project.technologies.map((tech: string) => (
            <TechTag name={tech} variant="technology" />
          ))}
        </div>
      </div>
    )}
    
    {project.tools.length > 0 && (
      <div>
        <span class="text-xs font-semibold text-text-muted uppercase tracking-wider">Tools</span>
        <div class="flex flex-wrap gap-1 mt-1">
          {project.tools.map((tool: string) => (
            <TechTag name={tool} variant="tool" />
          ))}
        </div>
      </div>
    )}
  </div>

  <!-- Links -->
  <div class="flex flex-wrap gap-2 pt-4 border-t border-dark-border-subtle">
    <Button
      href={detailUrl}
      variant="primary"
      size="sm"
      icon="arrow-right"
      iconPosition="right"
    >
      View Details
    </Button>
    {project.links.github && (
      <Button
        href={project.links.github}
        variant="outline"
        size="sm"
        icon="github"
        external={true}
      >
        GitHub
      </Button>
    )}
    {project.links.website && (
      <Button
        href={project.links.website}
        variant="outline"
        size="sm"
        icon="external-link"
        external={true}
      >
        Website
      </Button>
    )}
    {project.links.demo && project.type != 'writing' && (
      <Button
        href={project.links.demo}
        variant="outline"
        size="sm"
        icon="eye"
        external={true}
      >
        Demo
      </Button>
    )}
    {project.links.article && (
      <Button
        href={project.links.article}
        variant="outline"
        size="sm"
        icon="file-text"
        external={true}
      >
        Article
      </Button>
    )}
  </div>
</article>
